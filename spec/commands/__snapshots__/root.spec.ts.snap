// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`root > when deploy is given > prints the usage when --help is passed 1`] = `
"Deploy your development environment to production.

Your local filesystem must be in sync with your development
environment before you can deploy.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

If your environment has also made changes since the last sync,
you will be prompted to discard them or abort the deploy.

If any problems are detected, you will be prompted to continue,
or abort the deploy.

USAGE

  ggt deploy [--app=<name>] [--from=<env>] [--force]
             [--allow-problems]

EXAMPLES

  $ ggt deploy
  $ ggt deploy --from=staging
  $ ggt deploy --from=staging --force
  $ ggt deploy --from=staging --force --allow-problems

FLAGS

  -a, --app, --application=<name>
    The application to deploy.

    Defaults to the application within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -e, --from, --env, --environment=<name>
    The development environment to deploy from.

    Defaults to the environment within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -f, --force
    Discard any changes made to your environment's filesystem
    since the last \\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\".

    Defaults to false.

  --allow-problems, --allow-issues
    Deploy your development environment to production regardless
    of any problems it may have.

    These problems may include:
      • Gelly syntax errors
      • TypeScript errors
      • Models with missing fields

  --allow-unknown-directory
    Allows \\"ggt deploy\\" to continue when the current directory, nor
    any parent directories, contain a \\".gadget/sync.json\\" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows \\"ggt push\\" to continue with a different --app than the
    one found within the \\".gadget/sync.json\\" file.

    Defaults to false.

Run \\"ggt deploy -h\\" for less information.
"
`;

exports[`root > when deploy is given > prints the usage when -h is passed 1`] = `
"Deploy your development environment to production.

Your local filesystem must be in sync with your development
environment before you can deploy.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

USAGE
  ggt deploy

EXAMPLES
  $ ggt deploy
  $ ggt deploy --from=staging
  $ ggt deploy --from=staging --force
  $ ggt deploy --from=staging --force --allow-problems

FLAGS
  -a, --app=<name>      The application to deploy
  -e, --from=<env>      The environment to deploy from
      --force           Discard un-synchronized environment changes

Run \\"ggt deploy --help\\" for more information.
"
`;

exports[`root > when dev is given > prints the usage when --help is passed 1`] = `
"Sync your local filesystem with your environment's filesystem,
in real-time.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

If your environment has also made changes since the last sync,
they will be merged with your local changes.

If conflicting changes are detected, you will be prompted to
choose which changes to keep before sync resumes.

While \\"ggt dev\\" is running, changes on your local filesystem are
immediately reflected on your environment, while file changes on
your environment are immediately reflected on your local filesystem.

Ideal for:
  • Local development with editors like VSCode
  • Storing source code in a Git repository like GitHub

Sync looks for a \\".ignore\\" file to exclude files and directories
from being synced. The format is identical to Git's.

These files are always ignored:
  • .DS_Store
  • .gadget
  • .git
  • node_modules

Note:
  • Only works with development environments
  • Only supports \\"yarn\\" v1 for installing dependencies
  • Avoid deleting or moving all your files while \\"ggt dev\\" is running

USAGE

  ggt dev [DIRECTORY] [--app=<name>] [--env=<name>] [--prefer=<filesystem>]
                      [--allow-unknown-directory] [--allow-different-app]

EXAMPLES

  $ ggt dev
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example --app=example
  $ ggt dev ~/gadget/example --app=example --env=development --prefer=local

ARGUMENTS

  DIRECTORY
    The path to the directory to sync files to.
    The directory will be created if it does not exist.

    Defaults to the current working directory. (default: \\".\\")

FLAGS

  -a, --app, --application=<name>
    The application to sync files to.

    Defaults to the application within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -e, --env, --environment=<name>
    The development environment to sync files to.

    Defaults to the environment within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  --prefer=<filesystem>
    Which filesystem's changes to automatically keep when
    conflicting changes are detected.

    Must be one of \\"local\\" or \\"gadget\\".

    If not provided, sync will pause when conflicting changes are
    detected and you will be prompted to choose which changes to
    keep before sync resumes.

  --allow-unknown-directory
    Allows \\"ggt dev\\" to continue when the chosen directory, nor
    any parent directories, contain a \\".gadget/sync.json\\" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows \\"ggt dev\\" to continue with a different --app than the
    one found within the \\".gadget/sync.json\\" file.

    Defaults to false.

Run \\"ggt dev -h\\" for less information.
"
`;

exports[`root > when dev is given > prints the usage when -h is passed 1`] = `
"Sync your local filesystem with your environment's filesystem,
in real-time.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

USAGE
  ggt dev [DIRECTORY]

EXAMPLES
  $ ggt dev
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example --app=example
  $ ggt dev ~/gadget/example --app=example --env=development --prefer=local

ARGUMENTS
  DIRECTORY    The directory to sync files to (default: \\".\\")

FLAGS
  -a, --app=<name>           The application to sync files to
  -e, --env=<name>           The environment to sync files to
      --prefer=<filesystem>  Prefer \\"local\\" or \\"gadget\\" conflicting changes

  Run \\"ggt dev --help\\" for more information.
"
`;

exports[`root > when list is given > prints the usage when --help is passed 1`] = `
"List your available applications.

USAGE
  ggt list

EXAMPLES
  $ ggt list
"
`;

exports[`root > when list is given > prints the usage when -h is passed 1`] = `
"List your available applications.

USAGE
  ggt list

EXAMPLES
  $ ggt list
"
`;

exports[`root > when login is given > prints the usage when --help is passed 1`] = `
"Log in to your account.

USAGE
  ggt login

EXAMPLES
  $ ggt login
"
`;

exports[`root > when login is given > prints the usage when -h is passed 1`] = `
"Log in to your account.

USAGE
  ggt login

EXAMPLES
  $ ggt login
"
`;

exports[`root > when logout is given > prints the usage when --help is passed 1`] = `
"Log out of your account.

USAGE
  ggt logout

EXAMPLES
  $ ggt logout
"
`;

exports[`root > when logout is given > prints the usage when -h is passed 1`] = `
"Log out of your account.

USAGE
  ggt logout

EXAMPLES
  $ ggt logout
"
`;

exports[`root > when open is given > prints the usage when --help is passed 1`] = `
"Open a specified Gadget location directly in your browser.

USAGE

  ggt open [SUBCOMMAND] [--app=<name>] [--environment=<env>]
             [--show-all]

SUBCOMMANDS
  • logs
    The log viewer for the app on the current environment
  • permissions
    The permissions settings for the app on the current environment
  • data
    The data viewer for a specified model on the current environment
  • schema
    The schema viewer for a specified model on the current environment

EXAMPLES

  $ ggt open logs
  $ ggt open permissions 
  $ ggt open data modelA
  $ ggt open data --show-all
  $ ggt open schema modelA
  $ ggt open schema --show-all

FLAGS

  -a, --app, --application=<name>
    The application to open.

    Defaults to the application within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -e, --from, --env, --environment=<name>
    The development environment to open.

    Defaults to the environment within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  --show-all, 
    Shows a list of available models the user may select from to open
"
`;

exports[`root > when open is given > prints the usage when -h is passed 1`] = `
"Open a specified Gadget location directly in your browser.

USAGE

  ggt open [SUBCOMMAND] [--app=<name>] [--environment=<env>]
             [--show-all]

EXAMPLES
  $ ggt open logs
  $ ggt open permissions 
  $ ggt open data modelA
  $ ggt open data --show-all
  $ ggt open schema modelA
  $ ggt open schema --show-all

FLAGS
  -a, --app=<name>      The application to open
  -e, --from=<env>      The environment to open
      --show-all        Shows all available models to open

Run \\"ggt open --help\\" for more information.
"
`;

exports[`root > when pull is given > prints the usage when --help is passed 1`] = `
"Pull changes from your environment's filesystem to your local filesystem.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" in the chosen directory.

If your local filesystem has also made changes since the last sync,
you will be prompted to discard them or abort the pull.

USAGE

  ggt pull [DIRECTORY] [--app=<name>] [--env=<name>] [--force]
                       [--allow-unknown-directory] [--allow-different-app]

EXAMPLES

  $ ggt pull
  $ ggt pull --force
  $ ggt pull --force --env=staging
  $ ggt pull --force --env=staging --app=example --allow-unknown-directory

FLAGS

  -a, --app=<name>
    The application to pull files from.

    Defaults to the application within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -e, --env, --environment=<name>
    The environment to pull files from.

    Defaults to the environment within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -f, --force
    Discard any changes made to your local filesystem
    since the last \\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\".

    Defaults to false.

  --allow-unknown-directory
    Allows \\"ggt pull\\" to continue when the current directory, nor
    any parent directories, contain a \\".gadget/sync.json\\" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows \\"ggt pull\\" to continue with a different --app than the
    one found within the \\".gadget/sync.json\\" file.

    Defaults to false.

Run \\"ggt pull -h\\" for less information.
"
`;

exports[`root > when pull is given > prints the usage when -h is passed 1`] = `
"Pull changes from your environment's filesystem to your local filesystem.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

USAGE
  ggt pull

EXAMPLES
  $ ggt pull
  $ ggt pull --force
  $ ggt pull --force --env=staging
  $ ggt pull --force --env=staging --app=example --allow-unknown-directory

FLAGS
  -a, --app=<name>   The application to pull files from
  -e, --env=<name>   The environment to pull files from
      --force        Discard un-synchronized local changes

  Run \\"ggt pull --help\\" for more information.
"
`;

exports[`root > when push is given > prints the usage when --help is passed 1`] = `
"Push changes from your local filesystem to your environment's filesystem.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

If your environment has also made changes since the last sync,
you will be prompted to discard them or abort the push.

USAGE

  ggt push [--app=<name>] [--env=<name>] [--force]
           [--allow-unknown-directory] [--allow-different-app]

EXAMPLES

  $ ggt push
  $ ggt push --force
  $ ggt push --force --env=staging
  $ ggt push --force --env=staging --allow-unknown-directory

FLAGS

  -a, --app, --application=<name>
    The application to push files to.

    Defaults to the application within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -e, --env, --environment=<name>
    The development environment to push files to.

    Defaults to the environment within the \\".gadget/sync.json\\"
    file in the current directory or any parent directories.

  -f, --force
    Discard any changes made to your environment's filesystem
    since the last \\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\".

    Defaults to false.

  --allow-unknown-directory
    Allows \\"ggt push\\" to continue when the current directory, nor
    any parent directories, contain a \\".gadget/sync.json\\" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows \\"ggt push\\" to continue with a different --app than the
    one found within the \\".gadget/sync.json\\" file.

    Defaults to false.

Run \\"ggt push -h\\" for less information.
"
`;

exports[`root > when push is given > prints the usage when -h is passed 1`] = `
"Push changes from your local filesystem to your environment's filesystem.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\" on your local filesystem.

USAGE
  ggt push

EXAMPLES
  $ ggt push
  $ ggt push --force
  $ ggt push --force --env=staging
  $ ggt push --force --env=staging --allow-unknown-directory

FLAGS
  -a, --app=<name>   The application to push files to
  -e, --env=<name>   The environment to push files to
      --force        Discard un-synchronized environment changes

  Run \\"ggt push --help\\" for more information.
"
`;

exports[`root > when status is given > prints the usage when --help is passed 1`] = `
"Show changes made to your local filesystem and your
environment's filesystem.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\".

USAGE

  ggt status

EXAMPLES

  $ ggt status
"
`;

exports[`root > when status is given > prints the usage when -h is passed 1`] = `
"Show changes made to your local filesystem and your
environment's filesystem.

Changes are calculated from the last time you ran
\\"ggt dev\\", \\"ggt push\\", or \\"ggt pull\\".

USAGE

  ggt status

EXAMPLES

  $ ggt status
"
`;

exports[`root > when version is given > prints the usage when --help is passed 1`] = `
"Print this version of ggt.

USAGE
  ggt version

EXAMPLES
  $ ggt version
"
`;

exports[`root > when version is given > prints the usage when -h is passed 1`] = `
"Print this version of ggt.

USAGE
  ggt version

EXAMPLES
  $ ggt version
"
`;

exports[`root > when whoami is given > prints the usage when --help is passed 1`] = `
"Show the name and email address of the currently logged in user.

USAGE
  ggt whoami

EXAMPLES
  $ ggt whoami
"
`;

exports[`root > when whoami is given > prints the usage when -h is passed 1`] = `
"Show the name and email address of the currently logged in user.

USAGE
  ggt whoami

EXAMPLES
  $ ggt whoami
"
`;
