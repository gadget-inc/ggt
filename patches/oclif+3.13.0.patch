diff --git a/node_modules/oclif/lib/commands/readme.js b/node_modules/oclif/lib/commands/readme.js
index c8a9120..28a8175 100644
--- a/node_modules/oclif/lib/commands/readme.js
+++ b/node_modules/oclif/lib/commands/readme.js
@@ -33,7 +33,8 @@ class Readme extends core_1.Command {
             .map(c => c.id === '.' ? { ...c, id: '' } : c);
         this.debug('commands:', commands.map(c => c.id).length);
         commands = (0, util_1.uniqBy)(commands, c => c.id);
-        commands = (0, util_1.sortBy)(commands, c => c.id);
+        const groups = (0, util_1.groupBy)(commands, c => c.priority || Infinity);
+        commands = (0, util_1.sortBy)(Object.entries(groups), ([priority]) => Number(priority)).flatMap(([_, group]) => (0, util_1.sortBy)(group, c => c.id));
         readme = this.replaceTag(readme, 'usage', this.usage(config));
         readme = this.replaceTag(readme, 'commands', flags.multi ? this.multiCommands(config, commands, flags.dir) : this.commands(config, commands));
         readme = this.replaceTag(readme, 'toc', this.toc(config, readme));
@@ -122,7 +123,7 @@ USAGE
         const wrapper = new help_compatibility_1.HelpCompatibilityWrapper(help);
         const header = () => {
             const usage = this.commandUsage(config, c);
-            return usage ? `## \`${config.bin} ${usage}\`` : `## \`${config.bin}\``;
+            return usage ? `### \`${config.bin} ${usage}\`` : `### \`${config.bin}\``;
         };
         try {
             // copy c to keep the command ID with colons, see:
diff --git a/node_modules/oclif/lib/util.js b/node_modules/oclif/lib/util.js
index 942cd27..f576ee2 100644
--- a/node_modules/oclif/lib/util.js
+++ b/node_modules/oclif/lib/util.js
@@ -51,6 +51,7 @@ function sortBy(arr, fn) {
     return arr.sort((a, b) => compare(fn(a), fn(b)));
 }
 exports.sortBy = sortBy;
+exports.groupBy = _.groupBy;
 // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
 const template = (context) => (t) => _.template(t || '')(context);
 exports.template = template;
