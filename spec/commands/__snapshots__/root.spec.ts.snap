// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`root > when deploy is given > prints the usage when --help is passed 1`] = `
"Deploy an environment to production.

Your local files must match your environment's files
before you can deploy. Changes are tracked from
the last "ggt dev", "ggt push", or "ggt pull" run locally.

If your local files don't match your environment's files, you will
be prompted to push your local files before you can deploy.

If your environment has un-pulled changes, and "--force" is not
passed, you will be prompted to discard them or abort the deploy.

USAGE

  ggt deploy [--app=<name>] [--from=<env>] [--force]
             [--allow-problems] [--allow-charges]

EXAMPLES

  $ ggt deploy
  $ ggt deploy --from=staging
  $ ggt deploy --from=staging --force
  $ ggt deploy --from=staging --force --allow-problems
  $ ggt deploy --from=staging --force --allow-problems --allow-charges

FLAGS

  -a, --app, --application=<name>
    The application to deploy.

    Defaults to the application within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -e, --env, --environment, --from=<name>
    The environment to deploy from.

    Defaults to the environment within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -f, --force
    Discard any changes made to your environment's filesystem
    since the last "ggt dev", "ggt push", or "ggt pull".

    Defaults to false.

  --allow-problems, --allow-issues
    Deploy your environment to production regardless of any problems
    it may have.

    These problems may include:
      • Gelly syntax errors
      • TypeScript errors
      • Models with missing fields

    Defaults to false.

  --allow-charges
    Allows "ggt deploy" to continue when deploying your environment
    to production will add charges to your account.

    Defaults to false.

  --allow-unknown-directory
    Allows "ggt deploy" to continue when the current directory, nor
    any parent directories, contain a ".gadget/sync.json" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows "ggt deploy" to continue with a different "--app" than the
    one found within the ".gadget/sync.json" file.

    Defaults to false.

Run "ggt deploy -h" for less information.
"
`;

exports[`root > when deploy is given > prints the usage when -h is passed 1`] = `
"Deploy an environment to production.

Your local files must match your environment's files
before you can deploy. Changes are tracked from
the last "ggt dev", "ggt push", or "ggt pull" run locally.

USAGE
  ggt deploy

EXAMPLES
  $ ggt deploy
  $ ggt deploy --from=staging
  $ ggt deploy --from=staging --force
  $ ggt deploy --from=staging --force --allow-problems

FLAGS
  -a, --app=<name>      The application to deploy
  -e, --from=<env>      The environment to deploy from
      --force           Discard changes to your environment's filesystem
      --allow-problems  Deploy regardless of any problems the environment has
      --allow-charges   Deploy even if doing so will add charges to your account

Run "ggt deploy --help" for more information.
"
`;

exports[`root > when dev is given > prints the usage when --help is passed 1`] = `
"Develop your app by synchronizing your local files with your
environment's files, in real-time. Changes are tracked from
the last "ggt dev", "ggt push", or "ggt pull" run locally.

While "ggt dev" is running, changes on your local filesystem are
immediately pushed to your environment, while file changes on
your environment are immediately pulled to your local filesystem.

If conflicting changes are detected, and "--prefer" is not passed,
you will be prompted to choose which changes to keep before
"ggt dev" resumes.

"ggt dev" looks for an ".ignore" file to exclude files and
directories from being pushed or pulled. The format is identical
to Git's.

The following files and directories are always ignored:
  • .DS_Store
  • .gadget
  • .git
  • node_modules

Note:
  • "ggt dev" only works with development environments
  • "ggt dev" only supports "yarn" v1 for installing dependencies
  • Avoid deleting or moving all of your files while "ggt dev" is running

USAGE

  ggt dev [DIRECTORY] [--app=<name>] [--env=<name>] [--prefer=<filesystem>]
                      [--allow-unknown-directory] [--allow-different-app]

EXAMPLES

  $ ggt dev
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example --app=example
  $ ggt dev ~/gadget/example --app=example --env=development --prefer=local

ARGUMENTS

  DIRECTORY
    The path to the directory to synchronize files to.
    The directory will be created if it does not exist.

    Defaults to the current working directory. (default: ".")

FLAGS

  -a, --app, --application=<name>
    The application to synchronize files with.

    Defaults to the application within the ".gadget/sync.json"
    file in the chosen directory or any parent directories.

  -e, --env, --environment=<name>
    The development environment to synchronize files with.

    Defaults to the environment within the ".gadget/sync.json"
    file in the chosen directory or any parent directories.

  --prefer=<filesystem>
    Which filesystem's changes to automatically keep when
    conflicting changes are detected.

    Must be one of "local" or "environment".

    If not provided, "ggt dev" will pause when conflicting changes
    are detected and you will be prompted to choose which changes to
    keep before "ggt dev" resumes.

  --allow-unknown-directory
    Allows "ggt dev" to continue when the chosen directory, nor
    any parent directories, contain a ".gadget/sync.json" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows "ggt dev" to continue with a different "--app" than the
    one found within the ".gadget/sync.json" file.

    Defaults to false.

Run "ggt dev -h" for less information.
"
`;

exports[`root > when dev is given > prints the usage when -h is passed 1`] = `
"Develop your app by synchronizing your local files with your
environment's files, in real-time. Changes are tracked from
the last "ggt dev", "ggt push", or "ggt pull" run locally.

USAGE
  ggt dev [DIRECTORY]

EXAMPLES
  $ ggt dev
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example
  $ ggt dev ~/gadget/example --app=example
  $ ggt dev ~/gadget/example --app=example --env=development --prefer=local

ARGUMENTS
  DIRECTORY    The directory to synchronize files to (default: ".")

FLAGS
  -a, --app=<name>           The application to synchronize files with
  -e, --env=<name>           The environment to synchronize files with
      --prefer=<filesystem>  Prefer "local" or "environment" conflicting changes

  Run "ggt dev --help" for more information.
"
`;

exports[`root > when list is given > prints the usage when --help is passed 1`] = `
"List your available applications.

USAGE
  ggt list

EXAMPLES
  $ ggt list
"
`;

exports[`root > when list is given > prints the usage when -h is passed 1`] = `
"List your available applications.

USAGE
  ggt list

EXAMPLES
  $ ggt list
"
`;

exports[`root > when login is given > prints the usage when --help is passed 1`] = `
"Log in to your account.

USAGE
  ggt login

EXAMPLES
  $ ggt login
"
`;

exports[`root > when login is given > prints the usage when -h is passed 1`] = `
"Log in to your account.

USAGE
  ggt login

EXAMPLES
  $ ggt login
"
`;

exports[`root > when logout is given > prints the usage when --help is passed 1`] = `
"Log out of your account.

USAGE
  ggt logout

EXAMPLES
  $ ggt logout
"
`;

exports[`root > when logout is given > prints the usage when -h is passed 1`] = `
"Log out of your account.

USAGE
  ggt logout

EXAMPLES
  $ ggt logout
"
`;

exports[`root > when open is given > prints the usage when --help is passed 1`] = `
"Open a Gadget location in your browser.

USAGE

  ggt open [LOCATION] [MODEL] [--show-all]
           [--app=<name>] [--env=<name>]

EXAMPLES

  $ ggt open
  $ ggt open logs
  $ ggt open permissions
  $ ggt open data modelA
  $ ggt open schema modelA
  $ ggt open data --show-all
  $ ggt open schema --show-all

ARGUMENTS

  LOCATION
    The location to open in the browser.

    Can be one of the following:
      logs         The log viewer
      permissions  The permissions settings
      data         The data viewer for the chosen model
      schema       The schema viewer for the chosen model

    Defaults to opening the editor.

  MODEL
    The model to open in the browser.

    Only required for the "data" and "schema" locations.

FLAGS

  -a, --app, --application=<name>
    The application to open.

    Defaults to the application within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -e, --env, --environment=<name>
    The environment to open.

    Defaults to the environment within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  --show-all
    Makes "ggt open" display available models to open rather than
    exiting with an error if a model is not specified.

    Defaults to false.

Run "ggt open -h" for less information.
"
`;

exports[`root > when open is given > prints the usage when -h is passed 1`] = `
"Open a Gadget location in your browser.

USAGE
  ggt open [LOCATION] [MODEL]

EXAMPLES
  $ ggt open
  $ ggt open logs
  $ ggt open permissions
  $ ggt open data modelA
  $ ggt open schema modelA
  $ ggt open data --show-all
  $ ggt open schema --show-all

ARGUMENTS
  LOCATION    The location to open
  MODEL       The model to open

FLAGS
  -a, --app=<name>      The application to open
  -e, --env=<env>       The environment to open
      --show-all        Show all available models to open

Run "ggt open --help" for more information.
"
`;

exports[`root > when pull is given > prints the usage when --help is passed 1`] = `
"Pull your environment's files to your local filesystem.
Changes are tracked from the last "ggt dev", "ggt push", or
"ggt pull" run locally.

If you have un-pushed changes, and "--force" is not passed,
you will be prompted to discard them or abort the pull.

USAGE

  ggt pull [--app=<name>] [--env=<name>] [--force]
           [--allow-unknown-directory] [--allow-different-app]

EXAMPLES

  $ ggt pull
  $ ggt pull --env=staging
  $ ggt pull --env=staging --force
  $ ggt pull --env=staging --force --allow-unknown-directory

FLAGS

  -a, --app, --application=<name>
    The application to pull files from.

    Defaults to the application within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -e, --env, --environment=<name>
    The environment to pull files from.

    Defaults to the environment within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -f, --force
    Discard any changes made to your local filesystem
    since the last "ggt dev", "ggt push", or "ggt pull".

    Defaults to false.

  --allow-unknown-directory
    Allows "ggt pull" to continue when the current directory, nor
    any parent directories, contain a ".gadget/sync.json" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows "ggt pull" to continue with a different "--app" than the
    one found within the ".gadget/sync.json" file.

    Defaults to false.

Run "ggt pull -h" for less information.
"
`;

exports[`root > when pull is given > prints the usage when -h is passed 1`] = `
"Pull your environment's files to your local filesystem.
Changes are tracked from the last "ggt dev", "ggt push", or
"ggt pull" run locally.

USAGE
  ggt pull

EXAMPLES
  $ ggt pull
  $ ggt pull --env=staging
  $ ggt pull --env=staging --force

FLAGS
  -a, --app=<name>   The application to pull files from
  -e, --env=<name>   The environment to pull files from
      --force        Discard changes to your local filesystem

  Run "ggt pull --help" for more information.
"
`;

exports[`root > when push is given > prints the usage when --help is passed 1`] = `
"Push your local files to your environment's filesystem.
Changes are tracked from the last "ggt dev", "ggt push", or
"ggt pull" run locally.

If your environment has un-pulled changes, and "--force" is not passed,
you will be prompted to discard them or abort the push.

USAGE

  ggt push [--app=<name>] [--env=<name>] [--force]
           [--allow-unknown-directory] [--allow-different-app]

EXAMPLES

  $ ggt push
  $ ggt push --env=staging
  $ ggt push --env=staging --force
  $ ggt push --env=staging --force --allow-unknown-directory

FLAGS

  -a, --app, --application=<name>
    The application to push files to.

    Defaults to the application within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -e, --env, --environment=<name>
    The environment to push files to.

    Defaults to the environment within the ".gadget/sync.json"
    file in the current directory or any parent directories.

  -f, --force
    Discard any changes made to your environment's filesystem
    since the last "ggt dev", "ggt push", or "ggt pull".

    Defaults to false.

  --allow-unknown-directory
    Allows "ggt push" to continue when the current directory, nor
    any parent directories, contain a ".gadget/sync.json" file
    within it.

    Defaults to false.

  --allow-different-app
    Allows "ggt push" to continue with a different "--app" than the
    one found within the ".gadget/sync.json" file.

    Defaults to false.

Run "ggt push -h" for less information.
"
`;

exports[`root > when push is given > prints the usage when -h is passed 1`] = `
"Push your local files to your environment's filesystem.
Changes are tracked from the last "ggt dev", "ggt push", or
"ggt pull" run locally.

USAGE
  ggt push

EXAMPLES
  $ ggt push
  $ ggt push --env=staging
  $ ggt push --env=staging --force

FLAGS
  -a, --app=<name>   The application to push files to
  -e, --env=<name>   The environment to push files to
      --force        Discard changes to your environment's filesystem

  Run "ggt push --help" for more information.
"
`;

exports[`root > when status is given > prints the usage when --help is passed 1`] = `
"Show file changes since your last dev, push, or pull.

USAGE

  ggt status

EXAMPLES

  $ ggt status
"
`;

exports[`root > when status is given > prints the usage when -h is passed 1`] = `
"Show file changes since your last dev, push, or pull.

USAGE

  ggt status

EXAMPLES

  $ ggt status
"
`;

exports[`root > when version is given > prints the usage when --help is passed 1`] = `
"Print this version of ggt.

USAGE
  ggt version

EXAMPLES
  $ ggt version
"
`;

exports[`root > when version is given > prints the usage when -h is passed 1`] = `
"Print this version of ggt.

USAGE
  ggt version

EXAMPLES
  $ ggt version
"
`;

exports[`root > when whoami is given > prints the usage when --help is passed 1`] = `
"Show the name and email address of the currently logged in user.

USAGE
  ggt whoami

EXAMPLES
  $ ggt whoami
"
`;

exports[`root > when whoami is given > prints the usage when -h is passed 1`] = `
"Show the name and email address of the currently logged in user.

USAGE
  ggt whoami

EXAMPLES
  $ ggt whoami
"
`;
